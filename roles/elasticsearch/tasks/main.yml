---
- name: Install tzdata
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Set kernel map-ccount
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: true
    state: present
    reload: true

- name: Create compose-driver
  ansible.builtin.file:
    path: /home/docker/es_compose
    state: directory
    owner: docker
    group: docker
    mode: "0755"

- name: Create docker-compose-file
  ansible.builtin.template:
    src: es_compose.yml.j2
    dest: /home/docker/es_compose/es_compose.yml
    owner: docker
    group: docker
    mode: "0664"

- name: Create and start services
  community.docker.docker_compose:
    project_src: /home/docker/es_compose
    files: es_compose.yml
  register: _elasticsearch__output
  become: true
  become_user: docker

- name: Verify that web and db services are running
  ansible.builtin.assert:
    that:
      - "_elasticsearch__output.services.es.es_compose_es_1.state.running"

- name: Delete the index
  ansible.builtin.uri:
    url: http://localhost:9200/*
    method: DELETE
  register: _elasticsearch__indexdelete
  retries: 5
  delay: 5
  until: _elasticsearch__indexdelete.msg is search("OK")

- name: CREATE the index
  ansible.builtin.uri:
    url: http://localhost:9200/data
    method: PUT
    body_format: json
    src: settings.json
  register: _elasticsearch__indexcreate

- name: Change number of replicas  for **all** indices to {{ elasticsearch__number_of_replicas }}
  ansible.builtin.uri:
    url: http://localhost:9200/*/_settings
    method: PUT
    body_format: json
    body: '{ "index" : { "number_of_replicas" : "{{ elasticsearch__number_of_replicas }}" } }'

- name: Verify index is created
  ansible.builtin.assert:
    that:
      - _elasticsearch__indexcreate.json.shards_acknowledged
